{"version":3,"file":"static/js/207.fef8f028.chunk.js","mappings":"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","sources":["components/ProjectLoader/index.js","pages/ProjectsInfoPage/Buttons/index.js","pages/ProjectsInfoPage/Modal/index.js","pages/ProjectsInfoPage/index.js"],"sourcesContent":["import React from 'react';\nimport { css } from '@emotion/react';\nimport { BeatLoader } from 'react-spinners';\n\nconst ProjectLoader = ({ loading }) => {\n  const override = css`\n    display: block;\n    margin: 0 auto;\n  `;\n\n  return (\n    <>\n      {loading && (\n        <div\n          className=\"project-loader\"\n          style={{\n            position: 'fixed',\n            top: '17%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}>\n          <BeatLoader color=\"#BF1616\" loading={true} css={override} size={20} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProjectLoader;\n","import React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { projects } from '../../../data/projects';\n\nfunction Buttons() {\n  const [shownPhotosCount, setShownPhotosCount] = useState(16);\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const projectId = parseInt(id, 10);\n  const projectIndex = projects.findIndex((block) => block.id === projectId);\n\n  useEffect(() => {\n    setShownPhotosCount(16);\n  }, [projectId]);\n\n  const goToNextProject = () => {\n    const nextProjectIndex = (projectIndex + 1) % projects.length;\n    const nextProjectId = projects[nextProjectIndex].id;\n    navigate(`/bureaux/projects/info/${nextProjectId}`);\n  };\n\n  const goToPreviousProject = () => {\n    const previousProjectIndex = (projectIndex - 1 + projects.length) % projects.length;\n    const previousProjectId = projects[previousProjectIndex].id;\n    navigate(`/bureaux/projects/info/${previousProjectId}`);\n  };\n  return (\n    <div className=\"buttons buttons-padding\">\n      <div className=\"buttons__wrapper\" onClick={goToPreviousProject}>\n        <div className=\"buttons__btn\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"27\"\n            height=\"27\"\n            viewBox=\"0 0 27 27\"\n            fill=\"none\">\n            <g clipPath=\"url(#clip0_0_40643)\">\n              <path\n                d=\"M16.875 20.252L10.125 13.502L16.875 6.75195\"\n                stroke=\"white\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </g>\n            <defs>\n              <clipPath id=\"clip0_0_40643\">\n                <rect width=\"27\" height=\"27\" fill=\"white\" transform=\"matrix(0 -1 -1 0 27 27)\" />\n              </clipPath>\n            </defs>\n          </svg>\n        </div>\n        <span>Попередній проєкт</span>\n      </div>\n      <div className=\"buttons__wrapper\" onClick={goToNextProject}>\n        <span>Наступний проєкт</span>\n        <div className=\"buttons__btn\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"27\"\n            height=\"27\"\n            viewBox=\"0 0 27 27\"\n            fill=\"none\">\n            <g clipPath=\"url(#clip0_0_40650)\">\n              <path\n                d=\"M10.125 20.252L16.875 13.502L10.125 6.75195\"\n                stroke=\"white\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </g>\n            <defs>\n              <clipPath id=\"clip0_0_40650\">\n                <rect width=\"27\" height=\"27\" fill=\"white\" transform=\"matrix(0 -1 1 0 0 27)\" />\n              </clipPath>\n            </defs>\n          </svg>\n        </div>\n      </div>\n      <span style={{ display: 'none' }}>Кількість показаних фотографій: {shownPhotosCount}</span>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import React from 'react';\n\nfunction Modal({ onClose, imageSrc, imageAlt, onPrev, onNext, isPrevDisabled, isNextDisabled }) {\n  return (\n    <div className=\"modal-overlay\" onClick={() => onClose()}>\n      <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n        <button className=\"modal-close\" onClick={() => onClose()}>\n          ×\n        </button>\n        <div className=\"modal-slider\">\n          <button className=\"modal-arrow prev\" disabled={isPrevDisabled} onClick={onPrev}>\n            &lt;\n          </button>\n          <img loading=\"lazy\" className=\"modal-img\" src={imageSrc} alt={imageAlt} />\n          <button className=\"modal-arrow next\" disabled={isNextDisabled} onClick={onNext}>\n            &gt;\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { projects } from '../../data/projects';\nimport Header from '../../components/Header';\nimport ProjectLoader from '../../components/ProjectLoader';\nimport './style.scss';\nimport Buttons from './Buttons';\nimport Modal from './Modal';\n\nconst ProjectInfo = () => {\n  const [shownPhotosCount, setShownPhotosCount] = useState(16);\n  const [loading, setLoading] = useState(true);\n  const { id } = useParams();\n  const projectId = parseInt(id, 10);\n  const projectIndex = projects.findIndex((block) => block.id === projectId);\n  const [showSlider, setShowSlider] = useState(false);\n  const [sliderIndex, setSliderIndex] = useState(0);\n\n  useEffect(() => {\n    setLoading(true);\n    setShownPhotosCount(16);\n    setTimeout(() => setLoading(false), 500);\n  }, [projectId]);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [shownPhotosCount]);\n\n  const handleLoadMorePhotos = (event) => {\n    event.stopPropagation();\n    setLoading(true);\n    setShownPhotosCount((prevCount) => prevCount + 16);\n    setTimeout(() => setLoading(false), 500);\n  };\n\n  if (projectIndex === -1) {\n    return <div>Проект не найден</div>;\n  }\n\n  const project = projects[projectIndex];\n\n  const projectBlockInfoStyle = {\n    backgroundImage: `url(${project.mainPhoto})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  };\n\n  const handlePrev = () => {\n    if (sliderIndex > 0) {\n      setSliderIndex(sliderIndex - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (sliderIndex < project.allPhoto.length - 1) {\n      setSliderIndex(sliderIndex + 1);\n    }\n  };\n\n  return (\n    <div className=\"project-container\">\n      <Header />\n      <ProjectLoader loading={loading} />\n      {!loading && (\n        <div className=\"project-container__info\" style={projectBlockInfoStyle}>\n          <div className=\"project-container__intro\">\n            <div className=\"project-container__wrapper\">\n              <h1 className=\"project-container__title\">{project.name}</h1>\n              <div className=\"project-container__description\">\n                <span className=\"project-container__subtitle\">{project.square}</span>\n                <span className=\"project-container__subtitle\">{project.city}</span>\n                <span className=\"project-container__subtitle\">{project.year}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"project-container__photo\">\n        <div className=\"container\">\n          <Buttons />\n          {!loading && (\n            <div className=\"project-info\">\n              {project.allPhoto.slice(0, shownPhotosCount).map((item, i) => (\n                <div\n                  className=\"project-info__item\"\n                  key={i}\n                  onClick={() => {\n                    setSliderIndex(i);\n                    setShowSlider(true);\n                  }}>\n                  <img loading=\"lazy\" key={i} className=\"project-info__img\" src={item} alt=\"\" />\n                </div>\n              ))}\n            </div>\n          )}\n          {!loading && shownPhotosCount < project.allPhoto.length && (\n            <button className=\"project-info__load-more\" onClick={handleLoadMorePhotos}>\n              Показати більше\n            </button>\n          )}\n          <Buttons />\n        </div>\n        {showSlider && (\n          <Modal\n            onClose={() => setShowSlider(false)}\n            imageSrc={project.allPhoto[sliderIndex]}\n            imageAlt=\"gallery image\"\n            onPrev={handlePrev}\n            onNext={handleNext}\n            isPrevDisabled={sliderIndex === 0}\n            isNextDisabled={sliderIndex === project.allPhoto.length - 1}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectInfo;\n"],"names":["_ref","loading","override","css","_templateObject","_taggedTemplateLiteral","_jsx","_Fragment","children","className","style","position","top","left","transform","BeatLoader","color","size","_useState","useState","_useState2","_slicedToArray","shownPhotosCount","setShownPhotosCount","navigate","useNavigate","id","useParams","projectId","parseInt","projectIndex","projects","findIndex","block","useEffect","_jsxs","onClick","previousProjectIndex","length","previousProjectId","concat","xmlns","width","height","viewBox","fill","clipPath","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","nextProjectIndex","nextProjectId","display","onClose","imageSrc","imageAlt","onPrev","onNext","isPrevDisabled","isNextDisabled","e","stopPropagation","disabled","src","alt","_useState3","_useState4","setLoading","_useState5","_useState6","showSlider","setShowSlider","_useState7","_useState8","sliderIndex","setSliderIndex","setTimeout","project","projectBlockInfoStyle","backgroundImage","mainPhoto","backgroundSize","backgroundPosition","Header","ProjectLoader","name","square","city","year","Buttons","allPhoto","slice","map","item","i","event","prevCount","Modal"],"sourceRoot":""}